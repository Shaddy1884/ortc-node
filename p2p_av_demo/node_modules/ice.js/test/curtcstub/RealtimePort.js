(function(g) {
    'use strict'; /*jshint browser:true,node:true*/

    function err() {
        throw new Error('not implemented');
    }

    function RealtimePort() {
        RealtimePort.super_.call(this);
    }
    Object.inherits(RealtimePort, g.EventTarget);

    RealtimePort.prototype.ip = '169.254.0.1';
    RealtimePort.prototype.port = 23;
    RealtimePort.prototype.ufrag = 'ufrag';
    RealtimePort.prototype.pwd = 'pwd';
    RealtimePort.prototype.open = true;
    ['close', 'networkchange', 'checksent', 'checksuccess', 'remotecheck'].forEach(function(etype) {
        RealtimePort.prototype[etype] = null;
    });
    RealtimePort.openLocalPorts = err;
    RealtimePort.allocateRelay = err;
    RealtimePort.prototype.allocateRelay = err;
    RealtimePort.prototype.check = err;
    RealtimePort.prototype.cancelCheck = err;
    RealtimePort.prototype.status = err;
    RealtimePort.prototype.close = err;
    RealtimePort.prototype.setServerAttributes = err;

    // testing convenience
    RealtimePort.prototype.emit = function(evt){
        this.dispatchEvent(new g.Event(evt));
    };

    global.stubs.RealtimePort = RealtimePort;
}((typeof window === 'object') ? window : global));