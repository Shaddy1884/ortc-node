(function() {
    'use strict'; /*jshint browser:true,node:false*/
    /*global asyncTest,ok,start,icejs*/

    var STUN_SERVER = {
        ip: '107.20.212.108', // '132.177.123.13',
        port: 9799 // 3478
    };

    function closeAnything(thing) {
        thing.close();
    }

    asyncTest('gather local ports', function() {
        var gatherer = new icejs.RealtimePortGatherer();
        gatherer.addEventListener('port', function(e) {
            ok(e.port);
        });
        gatherer.addEventListener('done', function(e) {
            ok(gatherer.ports.length > 0);
            gatherer.ports.forEach(closeAnything);
            start();
        });
        gatherer.gather();
    });

    asyncTest('gather server reflexive ports', function() {
        var options = {
            stun: STUN_SERVER
        };
        var gatherer = new icejs.RealtimePortGatherer(options);
        var serverReflexiveCount = 0;
        gatherer.addEventListener('port', function(e) {
            if (e.port.base) {
                serverReflexiveCount++;
                console.log('server reflexive', e.port);
            }
        });
        gatherer.addEventListener('done', function(e) {
            // NOTE: this will fail when run from a public IP
            // but no one has one of those in the real world
            ok(serverReflexiveCount, 'server reflexive present');
            gatherer.ports.forEach(closeAnything);
            start();
        });
        gatherer.gather();
    });

}());