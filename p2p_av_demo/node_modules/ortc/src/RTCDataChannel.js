/*
 *   Copyright © Microsoft Open Technologies, Inc.
 *   All Rights Reserved        
 *   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 *   the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 *   THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED,
 *   INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
 *   MERCHANTABLITY OR NON-INFRINGEMENT. 
 *   
 *   See the Apache 2 License for the specific language governing permissions and limitations under the License.
 *   
 *   This code incorporates material from the Object RTC (ORTC) API for WebRTC community group specification draft
 *   dated 2013-11-03, obtained from http://www.w3.org/community/orca/.
 */

/*
 
 WEBIDL
 
 [Constructor(RTCConnection connection, DOMString id, optional DOMString dataChannelType)]
 interface RTCDataChannel : EventTarget {
    readonly    attribute RTCConnection connection;
    readonly    attribute DOMString     id;
    readonly    attribute DOMString     type;
    void send (Object data);
                attribute EventHandler  ondata;

 };

*/


'use strict';

(function () {
    var g = ('undefined' !== typeof ortc) ? ortc : window;


    function RTCDataChannel(connection, id, dataChannelType) {

        Object.defineReadOnlyProperty(this, 'connection', connection);
        Object.defineReadOnlyProperty(this, 'id', id);
        Object.defineReadOnlyProperty(this, 'type', dataChannelType);

        this.defineEventProperty('data');
    }


    Object.inherits(RTCDataChannel, EventTarget);

    //
    // send the data.
    //
    RTCDataChannel.prototype.send = function (data) {

    };


    g.RTCDataChannel = RTCDataChannel;

}());